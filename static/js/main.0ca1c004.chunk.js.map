{"version":3,"sources":["Style.js","car-1149997.jpg","App.js","reportWebVitals.js","index.js"],"names":["useStyle","makeStyles","theme","icon","color","palette","common","white","button","main","marginTop","container","cardMedia","height","cardContainer","footer","padding","App","classes","Styles","AppBar","Toolbar","IconButton","PhotoCamera","className","Typography","variant","Container","maxWidth","align","gutterBottom","paragraph","Grid","spacing","justify","item","Button","map","c","sm","md","xl","Card","card","CardMedia","image","Image","Title","CardContent","cardContent","CardActions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAgCeA,EA9BEC,aAAW,SAACC,GAAD,MAAY,CACtCC,KAAM,CACJC,MAAOF,EAAMG,QAAQC,OAAOC,OAG9BC,OAAQ,CACNJ,MAAOF,EAAMG,QAAQC,OAAOC,OAG9BE,KAAM,CACJC,UAAW,IAGbC,UAAW,CACTD,UAAW,KAGbE,UAAW,CACTC,OAAQ,QAGVC,cAAe,CACbJ,UAAW,IAGbK,OAAQ,CACNC,QAAS,iBC5BE,G,MAAA,IAA0B,yC,+FCyG1BC,EAtFH,WACV,IAAMC,EAAUC,IAGhB,OACE,qCACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAaC,UAAWN,EAAQf,SAElC,cAACsB,EAAA,EAAD,CAAYC,QAAQ,KAApB,+BAIJ,uBAAMF,UAAWN,EAAQT,KAAzB,UACE,eAACkB,EAAA,EAAD,CAAWH,UAAWN,EAAQP,UAAWiB,SAAS,KAAlD,UACE,cAACH,EAAA,EAAD,CACEC,QAAQ,KACRG,MAAM,SACNzB,MAAM,cACN0B,cAAY,EAJd,yBASA,cAACL,EAAA,EAAD,CAAYrB,MAAM,gBAAgByB,MAAM,SAASE,WAAS,EAA1D,yIAKA,eAACC,EAAA,EAAD,CAAMrB,WAAS,EAACsB,QAAS,EAAGC,QAAQ,SAApC,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CAAQV,QAAQ,YAAYtB,MAAM,UAAlC,0BAKF,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CAAQV,QAAQ,WAAWtB,MAAM,UAAjC,uCAON,cAACuB,EAAA,EAAD,CAAWH,UAAWN,EAAQJ,cAA9B,SACE,cAACkB,EAAA,EAAD,CAAMrB,WAAS,EAACsB,QAAS,EAAGC,QAAQ,SAApC,SA7CM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GA8CtBG,KAAI,SAACC,GAAD,OACT,cAACN,EAAA,EAAD,CAAMG,MAAI,EAASI,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAtC,SACE,eAACC,EAAA,EAAD,CAAMlB,UAAWN,EAAQyB,KAAzB,UACE,cAACC,EAAA,EAAD,CACEC,MAAOC,EACPC,MAAM,cACNvB,UAAWN,EAAQN,YAErB,eAACoC,EAAA,EAAD,CAAaxB,UAAWN,EAAQ+B,YAAhC,UACE,cAACxB,EAAA,EAAD,CAAYC,QAAQ,KAApB,qBACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,YAAYtB,MAAM,gBAAtC,+EAIA,eAAC8C,EAAA,EAAD,WACE,cAACd,EAAA,EAAD,CAAQhC,MAAM,UAAd,kBACA,cAACgC,EAAA,EAAD,CAAQhC,MAAM,UAAd,4BAfQkC,aAyBxB,yBAAQd,UAAWN,EAAQH,OAA3B,UACE,cAACU,EAAA,EAAD,CAAYC,QAAQ,KAAKG,MAAM,SAA/B,yBAGA,cAACJ,EAAA,EAAD,CAAYC,QAAQ,QAAQG,MAAM,SAASzB,MAAM,gBAAjD,iDCrFO+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0ca1c004.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  icon: {\r\n    color: theme.palette.common.white,\r\n  },\r\n\r\n  button: {\r\n    color: theme.palette.common.white,\r\n  },\r\n\r\n  main: {\r\n    marginTop: 80,\r\n  },\r\n\r\n  container: {\r\n    marginTop: 100,\r\n  },\r\n\r\n  cardMedia: {\r\n    height: \"30vh\",\r\n  },\r\n\r\n  cardContainer: {\r\n    marginTop: 40,\r\n  },\r\n\r\n  footer: {\r\n    padding: \"10vh 10vh\",\r\n  },\r\n}));\r\n\r\nexport default useStyle;\r\n","export default __webpack_public_path__ + \"static/media/car-1149997.cd1564f5.jpg\";","import React from \"react\";\r\nimport { PhotoCamera } from \"@material-ui/icons\";\r\nimport Styles from \"./Style\";\r\nimport \"fontsource-roboto\";\r\nimport Image from \"./car-1149997.jpg\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Container,\r\n  Button,\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n} from \"@material-ui/core\";\r\n\r\nconst App = () => {\r\n  const classes = Styles();\r\n  const cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n  return (\r\n    <>\r\n      <AppBar>\r\n        <Toolbar>\r\n          <IconButton>\r\n            <PhotoCamera className={classes.icon} />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">Photo Album </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <main className={classes.main}>\r\n        <Container className={classes.container} maxWidth=\"sm\">\r\n          <Typography\r\n            variant=\"h3\"\r\n            align=\"center\"\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n          >\r\n            Photo Album\r\n          </Typography>\r\n\r\n          <Typography color=\"TextSecondary\" align=\"center\" paragraph>\r\n            Hello, this is a sentence tha describes a long long long text with\r\n            so many images and albums we stored the paste ten years.\r\n          </Typography>\r\n\r\n          <Grid container spacing={2} justify=\"center\">\r\n            <Grid item>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                See photos\r\n              </Button>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Button variant=\"outlined\" color=\"primary\">\r\n                Secondary Actions\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n\r\n        <Container className={classes.cardContainer}>\r\n          <Grid container spacing={4} justify=\"center\">\r\n            {cards.map((c) => (\r\n              <Grid item key={c} sm={12} md={6} xl={4}>\r\n                <Card className={classes.card}>\r\n                  <CardMedia\r\n                    image={Image}\r\n                    Title=\"Luxury Card\"\r\n                    className={classes.cardMedia}\r\n                  />\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography variant=\"h6\">Heading</Typography>\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                      This is collection of luxury cars, that we collect paste 5\r\n                      years.\r\n                    </Typography>\r\n                    <CardActions>\r\n                      <Button color=\"primary\">View</Button>\r\n                      <Button color=\"primary\">Edit</Button>\r\n                    </CardActions>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n\r\n      <footer className={classes.footer}>\r\n        <Typography variant=\"h6\" align=\"center\">\r\n          Photo Album\r\n        </Typography>\r\n        <Typography variant=\"body1\" align=\"center\" color=\"textSecondary\">\r\n          Hello, this is amazing Album\r\n        </Typography>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}